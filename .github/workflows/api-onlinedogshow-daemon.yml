name: Build & Push ApiOdsDaemon

on:
  push:
    branches: [ "master" ]
    paths:
      - "api-onlinedogshow-daemon/**"     

env:
  buildimage: anthonydenecheau/scc-onlinedogshow-daemon
  module: api-onlinedogshow-daemon
    
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build & Push ApiOdsDaemon
    env:
      MVN: mvn --show-version --batch-mode

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
    
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Get SHA_SHORT
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Cache maven
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 
          
    - name: Build with Maven
      run: |
        wget https://archive.apache.org/dist/kafka/0.10.0.1/kafka_2.11-0.10.0.1.tgz -O kafka.tgz
        mkdir -p kafka && tar xzf kafka.tgz -C kafka --strip-components 1
        echo "auto.create.topics.enable=true" >> kafka/config/server.properties
        nohup bash -c "cd kafka && bin/zookeeper-server-start.sh config/zookeeper.properties &"
        sleep 10
        nohup bash -c "cd kafka && bin/kafka-server-start.sh config/server.properties &"
        sleep 10
        kafka/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --create --topic kafka-test-topic --partitions 3 --replication-factor 1      
        mvn --projects ${{env.module}} clean package docker:build
      env:
        BUILD_NAME: ${{ steps.vars.outputs.sha_short }}   


    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2          
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN}}
        
    - name: Docker push
      run: |
        docker push ${{env.buildimage}}:${{ steps.vars.outputs.sha_short }}

    # https://github.com/marketplace/actions/microsoft-teams-notification
    - name: Notify dedicated teams channel
      if: success()
      uses: jdcargile/ms-teams-notification@v1.3
      with:
        github-token: ${{ github.token }} # this will use the runner's token.
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: "&#x2705; Docker image: ${{env.buildimage}}:${{ steps.vars.outputs.sha_short }}" 
        notification-color: 28a745
        timezone: Europe/Paris        
